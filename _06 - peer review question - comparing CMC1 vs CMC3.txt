# Generate weights in CMC1, Europeans, and then CMC3, Europeans. Perform rTWAS for both, and identify the correlation of results, and then correlate with the results when CMC1+3 are combined.

# CMC1, EUR only first.
            # Check the percentage of SNPs in the FUSION LD reference available in the target data .
            conda activate fusion_final
            mkdir -p /users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC1
            mkdir -p /users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC3

# Obtain new pd files
awk 'NR == 1 || $1 !~ /^CMC_HBCC/' ~/commonmind/Rodrigo/TWAS_HERVs_SCZ/pd_910_all > /users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC1/pd_cmc1.tsv  # 594 individuals (+ 1 header). Although note not all are Europeans! 
awk 'NR == 1 || $1 ~ /^CMC_HBCC/' ~/commonmind/Rodrigo/TWAS_HERVs_SCZ/pd_910_all > /users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC3/pd_cmc3.tsv # 317 individuals (+ 1 header)

# obtain file containing plink individual identifiers.
awk 'NR > 1 && $2 != "" {print "0" "\t" $4}' /users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC1/pd_cmc1.tsv > /users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC1/cmc1_identifiers_plink
awk 'NR > 1 && $2 != "" {print $4}' /users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC1/pd_cmc1.tsv > /users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC1/cmc1_identifiers_genotype_ids

awk 'NR > 1 && $2 != "" {print "0" "\t" $4}' /users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC3/pd_cmc3.tsv > /users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC3/cmc3_identifiers_plink
awk 'NR > 1 && $2 != "" {print $4}' /users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC3/pd_cmc3.tsv > /users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC3/cmc3_identifiers_genotype_ids

# obtain new genotype files and QC, CMC1
plink --bfile /users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/genotype_cmc1_cmc3_imputed/genotypes_EUR_12 --keep /users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC1/cmc1_identifiers_plink --make-bed --out /users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC1/genotypes_CMC1_1

plink --bfile /users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC1/genotypes_CMC1_1 --maf 0.05 --geno 0.05 --hwe 1e-10 include-nonctrl --mind 0.05 --make-bed --out /users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC1/genotypes_CMC1_2 # 436 individuals will be used in analysis (EUR, CMC1, cases and controls)

# obtain new genotype files and QC, CMC3
plink --bfile /users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/genotype_cmc1_cmc3_imputed/genotypes_EUR_12 --keep /users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC3/cmc3_identifiers_plink --make-bed --out /users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC3/genotypes_CMC3_1

plink --bfile /users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC3/genotypes_CMC3_1 --maf 0.05 --geno 0.05 --hwe 1e-10 include-nonctrl --mind 0.05 --make-bed --out /users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC3/genotypes_CMC3_2 # 127 individuals will be used in analysis (EUR, CMC3, cases and controls)

# Subset expression data for CMC1 only (coordinates and phenotype files)
awk 'NR==FNR {ids[$1]; next} FNR==1 || $2 in ids' /users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC1/cmc1_identifiers_genotype_ids /users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/fusion_weights_563_EUR_all/phenotype_file_adjusted_genes_and_hervs_hg19_EUR_all.txt > /users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC1/CMC1_phenotype_file.txt

awk 'NR==FNR {ids[$1]; next} FNR==1 || $2 in ids' /users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC3/cmc3_identifiers_genotype_ids /users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/fusion_weights_563_EUR_all/phenotype_file_adjusted_genes_and_hervs_hg19_EUR_all.txt > /users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC3/CMC3_phenotype_file.txt

# Check coverage of SNPs in ref file with those in CMC1 
conda activate fusion_final
target_plink="/users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC1/genotypes_CMC1_2"
ld_ref_dir="/users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/reference_panel_own/1000G_EUR_LDREF"
results_dir="/users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC1"

Rscript ~/scratch/programs/Calculating-FUSION-TWAS-weights-pipeline/OP_fusion_ref_overlap_checker.R \
--ld_ref_dir ${ld_ref_dir} \
--PLINK_prefix ${target_plink} \
--output ${results_dir}/overlap_ldref_and_genotype_files.txt

# Number of SNPs in FUSION LD Reference = 3091877
# Number of SNPs in target PLINK files = 4318966
# Number of SNPs in both = 3080014
# Percentage of SNPs in FUSION LD Reference that are in the target PLINK files = 99.61632%


# Check coverage of SNPs in ref file with those in CMC3
target_plink="/users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC3/genotypes_CMC3_2"
ld_ref_dir="/users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/reference_panel_own/1000G_EUR_LDREF"
results_dir="/users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC3"

Rscript ~/scratch/programs/Calculating-FUSION-TWAS-weights-pipeline/OP_fusion_ref_overlap_checker.R \
--ld_ref_dir ${ld_ref_dir} \
--PLINK_prefix ${target_plink} \
--output ${results_dir}/overlap_ldref_and_genotype_files.txt

# Number of SNPs in FUSION LD Reference = 3091877
# Number of SNPs in target PLINK files = 4260422
# Number of SNPs in both = 3044487
# Percentage of SNPs in FUSION LD Reference that are in the target PLINK files = 98.46727%

# note: not doing bslmm calculations as this takes so long. Modified ~/scratch/programs/Calculating-FUSION-TWAS-weights-pipeline/OP_TWAS_weights_using_fusion__V2.R to reflect this.

            ##############################   ~/fusion_weights_CMC1_only_1.sh
            #!/bin/bash -l
            #SBATCH -o /users/k1642468/logs/%x-%A-%a.out		# %x = job name (script name); %A = Job arrays master job allocation number; %a = Job array ID (index) number.
            #SBATCH -p cpu								# Request a shared node
            #SBATCH --time=24:00:00 							# format: days-hours:minutes.
            #SBATCH --mem-per-cpu=20000	
            #SBATCH --ntasks=1									# requests x cores from any node, per task.
            # # specify manually to do tests before running: SBATCH --array=1-1000 
            trap 'echo "# $(date) (time) $BASH_COMMAND"' DEBUG

            conda activate fusion_final

            cd ~/scratch/programs/Calculating-FUSION-TWAS-weights-pipeline # it has to run from this folder!
            target_plink=/users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC1/genotypes_CMC1_2
            ld_ref_dir=/users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/reference_panel_own/1000G_EUR_LDREF
            phenotype_file=/users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC1/CMC1_phenotype_file.txt
            plink=/users/k1642468/scratch/programs/plink
            gemma=/users/k1642468/scratch/programs/gemma-0.98.1-linux-static
            gcta=/users/k1642468/scratch/programs/fusion_twas-master/gcta_nr_robust
            fusion_software=/users/k1642468/scratch/programs/fusion_twas-master
            output=/users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC1/weights_CMC1_only
            mkdir -p $output

            coordinate_file=/users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/fusion_weights_563_EUR_all/coordinates_file_genes_and_hervs_hg19_563_EUR_all.txt
            LENGTH_COORDINATE_FILE=$(< "${coordinate_file}" wc -l)

            # `seq 0 250 18500` = {0,250,500,750,....18500} - make sure final number is divisable by mid number (18500/250), and that max number (18500+250) > length of coordinate_file
            for ITERATION in `seq 0 1500 18000`; do 

            ROWINDEX_0=$((SLURM_ARRAY_TASK_ID)) 
            ROWINDEX=$((ROWINDEX_0+${ITERATION}))
            if [ "${ROWINDEX}" -gt "${LENGTH_COORDINATE_FILE}" ] ||  [ "${ROWINDEX}" = 1 ]
                then 
                    echo "Nothing to run; skipping row index number ${ROWINDEX}"
                else
                    feature_name=$(awk "NR==${ROWINDEX}" <(cut -f 4 -d ' ' ${coordinate_file}))
                    echo "Something to run; gene or HERV id is ${feature_name}. The row index is ${ROWINDEX}"
                    Rscript --vanilla ~/scratch/programs/Calculating-FUSION-TWAS-weights-pipeline/OP_TWAS_weights_using_fusion__V2.R \
                    --PLINK_prefix ${target_plink} \
                    --phenotype_file ${phenotype_file} \
                    --coordinate_file ${coordinate_file} \
                    --gene_name ${feature_name} \
                    --plink ${plink} \
                    --gcta ${gcta} \
                    --gemma ${gemma} \
                    --ld_ref_dir ${ld_ref_dir} \
                    --fusion_software ${fusion_software} \
                    --output_dir ${output}
                    yes '' | sed 5q
            fi
            done

            ##################################################
            
            sbatch --array=1-1500 ~/fusion_weights_CMC1_only_1.sh 



# now cmc3.

            ##############################   ~/fusion_weights_CMC3_only_1.sh
            #!/bin/bash -l
            #SBATCH -o /users/k1642468/logs/%x-%A-%a.out		# %x = job name (script name); %A = Job arrays master job allocation number; %a = Job array ID (index) number.
            #SBATCH -p cpu								# Request a shared node
            #SBATCH --time=24:00:00 							# format: days-hours:minutes.
            #SBATCH --mem-per-cpu=20000	
            #SBATCH --ntasks=1									# requests x cores from any node, per task.
            # # specify manually to do tests before running: SBATCH --array=1-1000 
            trap 'echo "# $(date) (time) $BASH_COMMAND"' DEBUG

            conda activate fusion_final

            cd ~/scratch/programs/Calculating-FUSION-TWAS-weights-pipeline # it has to run from this folder!
            target_plink=/users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC3/genotypes_CMC3_2
            ld_ref_dir=/users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/reference_panel_own/1000G_EUR_LDREF
            phenotype_file=/users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC3/CMC3_phenotype_file.txt
            plink=/users/k1642468/scratch/programs/plink
            gemma=/users/k1642468/scratch/programs/gemma-0.98.1-linux-static
            gcta=/users/k1642468/scratch/programs/fusion_twas-master/gcta_nr_robust
            fusion_software=/users/k1642468/scratch/programs/fusion_twas-master
            output=/users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC3/weights_CMC3_only
            mkdir -p $output

            coordinate_file=/users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/fusion_weights_563_EUR_all/coordinates_file_genes_and_hervs_hg19_563_EUR_all.txt
            LENGTH_COORDINATE_FILE=$(< "${coordinate_file}" wc -l)

            # `seq 0 250 18500` = {0,250,500,750,....18500} - make sure final number is divisable by mid number (18500/250), and that max number (18500+250) > length of coordinate_file
            for ITERATION in `seq 0 1500 18000`; do 

            ROWINDEX_0=$((SLURM_ARRAY_TASK_ID)) 
            ROWINDEX=$((ROWINDEX_0+${ITERATION}))
            if [ "${ROWINDEX}" -gt "${LENGTH_COORDINATE_FILE}" ] ||  [ "${ROWINDEX}" = 1 ]
                then 
                    echo "Nothing to run; skipping row index number ${ROWINDEX}"
                else
                    feature_name=$(awk "NR==${ROWINDEX}" <(cut -f 4 -d ' ' ${coordinate_file}))
                    echo "Something to run; gene or HERV id is ${feature_name}. The row index is ${ROWINDEX}"
                    Rscript --vanilla ~/scratch/programs/Calculating-FUSION-TWAS-weights-pipeline/OP_TWAS_weights_using_fusion__V2.R \
                    --PLINK_prefix ${target_plink} \
                    --phenotype_file ${phenotype_file} \
                    --coordinate_file ${coordinate_file} \
                    --gene_name ${feature_name} \
                    --plink ${plink} \
                    --gcta ${gcta} \
                    --gemma ${gemma} \
                    --ld_ref_dir ${ld_ref_dir} \
                    --fusion_software ${fusion_software} \
                    --output_dir ${output}
                    yes '' | sed 5q
            fi
            done

            ##################################################
            
            sbatch --array=1-1500 ~/fusion_weights_CMC3_only_1.sh 

 # Prepare freshly calculated weights for FUSION format using opain's script: OP_packaging_fusion_weights.R 
 # Packaged weights: /users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC3/weights_CMC1_only/CMC1_wrapped/ 
 #                   /users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC3/weights_CMC3_only/CMC3_wrapped/



# Now perform the rTWAS for CMC1

###################### ~/rTWAS_MS_CMC1_only_1.sh
#!/bin/bash -l
#SBATCH -o /users/k1642468/logs/%x-%A-%a.out		# %x = job name (script name); %A = Job array's master job allocation number; %a = Job array ID (index) number.
#SBATCH -p cpu								# Request a shared node
#SBATCH --time=0-2:00:00 							# format: days-hours:minutes.
#SBATCH --mem-per-cpu=20000							# 9GB, in Mb - if unspecified, task will be given 1 GB only.
#SBATCH --ntasks=1									# requests x cores from any node, per task.
    # # SBATCH --array=1-22								# range%constainvalue => 1-22%4 would constrain 22 tasks to 4 at a time 

trap 'echo "# $(date) (time) $BASH_COMMAND"' DEBUG
# CHR=22
conda activate fusion_final

trait="MS_EUR"
CHR=${SLURM_ARRAY_TASK_ID}
sumstats=/users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ-copy/gwas/multitrait/${trait}.gwas.fusion
weights_pos_file="/users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC1/weights_CMC1_only/CMC1_wrapped.pos"
weights_dir="/users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC1/weights_CMC1_only"
ref_ld="/users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/reference_panel_own/1000G_EUR_LDREF/CHR."
out_dir=/users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC1/weights_CMC1_only/rTWAS_results_${trait}
mkdir -p ${out_dir}
fusion_software_dir="/users/k1642468/scratch/programs/fusion_twas-master"

Rscript --verbose --no-save ${fusion_software_dir}/FUSION.assoc_test.R \
--sumstats ${sumstats} \
--weights ${weights_pos_file} \
--weights_dir ${weights_dir} \
--ref_ld_chr ${ref_ld} \
--chr ${CHR} \
--out ${out_dir}/${trait}.${CHR}.dat

###############################################################################

sbatch --array=1-22 ~/rTWAS_MS_CMC1_only_1.sh


# And for CMC3

###################### ~/rTWAS_MS_CMC3_only_1.sh
#!/bin/bash -l
#SBATCH -o /users/k1642468/logs/%x-%A-%a.out		# %x = job name (script name); %A = Job array's master job allocation number; %a = Job array ID (index) number.
#SBATCH -p cpu								# Request a shared node
#SBATCH --time=0-2:00:00 							# format: days-hours:minutes.
#SBATCH --mem-per-cpu=20000							# 9GB, in Mb - if unspecified, task will be given 1 GB only.
#SBATCH --ntasks=1									# requests x cores from any node, per task.
    # # SBATCH --array=1-22								# range%constainvalue => 1-22%4 would constrain 22 tasks to 4 at a time 

trap 'echo "# $(date) (time) $BASH_COMMAND"' DEBUG
# CHR=22
conda activate fusion_final

trait="MS_EUR"
CHR=${SLURM_ARRAY_TASK_ID}
sumstats=/users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ-copy/gwas/multitrait/${trait}.gwas.fusion
weights_pos_file="/users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC3/weights_CMC3_only/CMC3_wrapped.pos"
weights_dir="/users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC3/weights_CMC3_only"
ref_ld="/users/k1642468/commonmind/Rodrigo/TWAS_HERVs_SCZ/reference_panel_own/1000G_EUR_LDREF/CHR."
out_dir=/users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC3/weights_CMC3_only/rTWAS_results_${trait}
mkdir -p ${out_dir}
fusion_software_dir="/users/k1642468/scratch/programs/fusion_twas-master"

Rscript --verbose --no-save ${fusion_software_dir}/FUSION.assoc_test.R \
--sumstats ${sumstats} \
--weights ${weights_pos_file} \
--weights_dir ${weights_dir} \
--ref_ld_chr ${ref_ld} \
--chr ${CHR} \
--out ${out_dir}/${trait}.${CHR}.dat

###############################################################################

sbatch --array=1-22 ~/rTWAS_MS_CMC3_only_1.sh

# For CMC1, combine results to see whether there are significant features, without duplicating header
cd /users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC1/weights_CMC1_only/rTWAS_results_MS_EUR/
ls *.dat* | wc -l # 23 (22 chromosomes plus MHC)
head -1  MS_EUR.1.dat > MS_EUR_____all_chr.tsv
tail -n +2 -q MS_EUR.* >> MS_EUR_____all_chr.tsv

wc -l MS_EUR_____all_chr.tsv # 7199 - 1 header = 7198 genetic features tested

# Calculate the number of non-NA values in the TWAS.P column
non_na_count=$(awk 'NR > 1 && $NF != "NA" {count++} END {print count}' MS_EUR_____all_chr.tsv)

# Create a new file with the TWAS.Bonf column
awk -v n="$non_na_count" 'BEGIN {OFS="\t"} 
NR == 1 {print $0, "TWAS.Bonf"} 
NR > 1 {if ($NF != "NA") bonf = $NF * n; else bonf = "NA"; print $0, bonf}' MS_EUR_____all_chr.tsv > MS_EUR_____all_chr__corrected.tsv



# For CMC3, combine results to see whether there are significant features, without duplicating header
cd /users/k1642468/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC3/weights_CMC3_only/rTWAS_results_MS_EUR/
ls *.dat* | wc -l # 23 (22 chromosomes plus MHC)
head -1  MS_EUR.1.dat > MS_EUR_____all_chr.tsv
tail -n +2 -q MS_EUR.* >> MS_EUR_____all_chr.tsv

wc -l MS_EUR_____all_chr.tsv # 7199 - 1 header = 7198 genetic features tested

# Calculate the number of non-NA values in the TWAS.P column
non_na_count=$(awk 'NR > 1 && $NF != "NA" {count++} END {print count}' MS_EUR_____all_chr.tsv)

# Create a new file with the TWAS.Bonf column
awk -v n="$non_na_count" 'BEGIN {OFS="\t"} 
NR == 1 {print $0, "TWAS.Bonf"} 
NR > 1 {if ($NF != "NA") bonf = $NF * n; else bonf = "NA"; print $0, bonf}' MS_EUR_____all_chr.tsv > MS_EUR_____all_chr__corrected.tsv

######################
# Correlation of CMC1 with CMC3
######################
conda activate fusion_final
R
library(data.table)
CMC1 <- fread("~/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC1/weights_CMC1_only/rTWAS_results_MS_EUR/MS_EUR_____all_chr.tsv", stringsAsFactors=F)
table(is.na(CMC1$TWAS.P))
CMC1 <- CMC1[!is.na(CMC1$TWAS.P),]  # There were some NAs - remove!

CMC3 <- fread("~/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC3/weights_CMC3_only/rTWAS_results_MS_EUR/MS_EUR_____all_chr.tsv", stringsAsFactors=F)
table(is.na(CMC3$TWAS.P))
CMC3 <- CMC3[!is.na(CMC3$TWAS.P),]  # There were some NAs - remove!

merged_twas <- merge(CMC3, CMC1, by="ID")
dim(merged_twas) #  4184

# check distribution of P values
png("~/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC1/weights_CMC1_only/rTWAS_results_MS_EUR/distribution_z_scores_cmc1.png",width = 2000, height = 2000, units = "px", res=300)
hist(merged_twas$`TWAS.Z.x`, col='steelblue', main='CMC1, distribution of Z scores')
dev.off()

png("~/commonmind/Rodrigo/neurodegen_rTWAS/rTWAS/CMC1/weights_CMC1_only/rTWAS_results_MS_EUR/distribution_z_scores_cmc3.png",width = 2000, height = 2000, units = "px", res=300)
hist(merged_twas$`TWAS.Z.y`, col='steelblue', main='CMC3only, distribution of Z scores')
dev.off()

# They look centered around 0, thus normally distributed. (which makes sense, since these are Z scores) This means we better use Pearson to test correlation (not spearman)

cor.test(merged_twas$`TWAS.Z.x`,merged_twas$`TWAS.Z.y`, method="pearson")  
#         Pearson's product-moment correlation
# data:  merged_twas$TWAS.Z.x and merged_twas$TWAS.Z.y
# t = 122.8, df = 4182, p-value < 2.2e-16
# alternative hypothesis: true correlation is not equal to 0
# 95 percent confidence interval:
#  0.8780465 0.8912143
# sample estimates:
#       cor
# 0.8848069  <<<<<<-------

# Now, how many there were in CMC3 compared to CMC1.

# Number of individuals:
CMC1 = 436 (EUR, CMC1)
CMC3 = 127 (EUR, CMC3)
CMC1+3 = 563

